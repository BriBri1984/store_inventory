---
- name: libmysqlclient-dev
  action: apt pkg=libmysqlclient-dev state=present
  become: True

- name: software-properties-common
  action: apt pkg=software-properties-common state=present
  become: True

- name: mysql-server on dev
  action: apt pkg=mysql-server state=present
  become: True
  when: symfony_env == "dev"

- name: mysql-client
  action: apt pkg=mysql-client state=present
  become: True

- name: python-mysqldb
  action: apt pkg=python-mysqldb state=present
  become: True

- name: Install MySQL python package via pip
  shell: pip install MySQL-python
  become: True

- name: Start the MySQL service
  action: service name=mysql state=started
  become: True
  when: symfony_env == "dev"

- name: Copy local .my.cnf file with root's password credentials
  copy: src=.blank.my.cnf dest=/root/.my.cnf owner=root mode=0600
  become: True
  when: symfony_env == "dev"

- name: Update mysql password for APP mysql user accounts
  mysql_user: name={{ dev_app_mysql_user }} host={{ item }} password={{ dev_app_mysql_pass }} priv=*.*:ALL,GRANT
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  ignore_errors: True
  become: True
  when: symfony_env == "dev"

- name: Copy local .my.cnf file with vagrant's password credentials
  copy: src=.my.cnf dest=/home/{{ansible_ssh_user}}/.my.cnf owner={{ ansible_ssh_user }} mode=0600
  when: symfony_env == "dev"

- name: Update mysql password for APP mysql all hosts
  mysql_user: name={{ dev_app_mysql_user }} host={{ item }} password={{ dev_app_mysql_pass }} priv=*.*:ALL,GRANT
  with_items:
    - "%"
  ignore_errors: true
  when: symfony_env == "dev"

- name: Ensure APP dev database
  mysql_db: name={{ dev_app_mysql_db }} state=present login_host={{ dev_app_mysql_host }} login_user={{ dev_app_mysql_user }} login_password={{ dev_app_mysql_pass }}
  when: symfony_env == "dev"
  ignore_errors: true

- name: Ensure APP test database
  mysql_db: name={{ test_app_mysql_db }} state=present login_host={{ dev_app_mysql_host }} login_user={{ dev_app_mysql_user }} login_password={{ dev_app_mysql_pass }}
  when: symfony_env == "dev"
  ignore_errors: true

- name: Global mysql configuration for dev
  template: src=my.cnf.j2 dest=/etc/mysql/my.cnf owner={{ansible_ssh_user}} mode=0600
  become: True
  when: symfony_env == "dev"

- name: Restart mysql on dev
  service: name=mysql state=restarted
  become: True
  when: symfony_env == "dev"

- name: Load timezone tables on VM
  shell: mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -D mysql
  when: symfony_env == "dev"
  ignore_errors: True